{"ast":null,"code":"var _jsxFileName = \"/Users/mirror/WindSurf Projects/retro_arif/retromeet/frontend/react-admin/src/pages/Responses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Avatar from '@mui/material/Avatar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeRaw from 'rehype-raw'; // For rendering HTML tags in markdown\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Chip from '@mui/material/Chip';\nimport Divider from '@mui/material/Divider';\nimport { getProjectResponses, getProject } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `responses-tabpanel-${index}`,\n    \"aria-labelledby\": `responses-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nfunction Responses() {\n  _s();\n  // ...existing state\n  const [tunedModal, setTunedModal] = useState({\n    open: false,\n    participant: null,\n    tunedResponse: null\n  });\n\n  // Handler to open modal with participant and tuned response\n  const handleOpenTunedModal = (participant, tunedResponse) => {\n    setTunedModal({\n      open: true,\n      participant,\n      tunedResponse\n    });\n  };\n  // Handler to close modal\n  const handleCloseTunedModal = () => {\n    setTunedModal({\n      open: false,\n      participant: null,\n      tunedResponse: null\n    });\n  };\n  const {\n    projectId\n  } = useParams();\n  const [responses, setResponses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [tabValue, setTabValue] = useState(0);\n  const [groupedResponses, setGroupedResponses] = useState({\n    byParticipant: {},\n    byQuestion: {}\n  });\n  const [project, setProject] = useState({});\n  const [refreshKey, setRefreshKey] = useState(0); // Add a key to trigger refresh\n\n  useEffect(() => {\n    const fetchProject = async () => {\n      try {\n        const response = await getProject(projectId);\n        setProject(response.data);\n      } catch (error) {\n        console.error('Error fetching project:', error);\n      }\n    };\n    fetchProject();\n  }, [projectId]);\n  const fetchResponses = async () => {\n    try {\n      setLoading(true);\n      const response = await getProjectResponses(projectId);\n      if (response.data && Array.isArray(response.data)) {\n        const responsesWithFullContent = await Promise.all(response.data.map(async resp => {\n          // If it's a chat response, fetch the full content and overwrite original_response\n          if (resp.chat_response_file_path) {\n            try {\n              const fileResponse = await fetch(`http://localhost:8000/static/${resp.chat_response_file_path}`);\n              if (fileResponse.ok) {\n                const markdownContent = await fileResponse.text();\n                // Return the response with original_response updated, but keep other fields like refined_response\n                return {\n                  ...resp,\n                  original_response: markdownContent\n                };\n              } else {\n                // If fetch fails, just return the original response data\n                console.error(`Error fetching chat content for ${resp.chat_response_file_path}: ${fileResponse.statusText}`);\n                return resp;\n              }\n            } catch (error) {\n              console.error(`Error fetching chat content for ${resp.chat_response_file_path}`, error);\n              return resp; // On error, return original response\n            }\n          }\n          // If it's not a chat response, just return it as is.\n          return resp;\n        }));\n        const processedResponses = responsesWithFullContent.map(resp => {\n          const pName = resp.participant_name || `Participant ${resp.participant_id || 'Unknown'}`;\n          // Use the avatar_path from the backend response if available (e.g., resp.participant_avatar_path)\n          // or a default if not present.\n          const backendAvatarPath = resp.participant_avatar_path; // Adjust field name if necessary\n          return {\n            ...resp,\n            participant: {\n              id: resp.participant_id,\n              name: pName,\n              avatar_path: backendAvatarPath || `/static/avatars/default.png` // Use backend path or default\n            }\n          };\n        });\n        setResponses(processedResponses);\n        const byParticipant = {};\n        const byQuestion = {};\n        processedResponses.forEach(transformedResp => {\n          const participantNameKey = transformedResp.participant.name;\n          if (!byParticipant[participantNameKey]) {\n            byParticipant[participantNameKey] = {\n              participant: transformedResp.participant,\n              responses: []\n            };\n          }\n          byParticipant[participantNameKey].responses.push(transformedResp);\n          const questionKey = transformedResp.question || \"General Feedback\";\n          if (!byQuestion[questionKey]) {\n            byQuestion[questionKey] = [];\n          }\n          byQuestion[questionKey].push(transformedResp);\n        });\n        setGroupedResponses({\n          byParticipant,\n          byQuestion\n        });\n      } else {\n        setResponses([]);\n        setGroupedResponses({\n          byParticipant: {},\n          byQuestion: {}\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching responses:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchResponses();\n  }, [projectId, refreshKey]); // Add refreshKey to trigger refetch\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const formatDate = dateString => {\n    if (!dateString) {\n      return 'No date';\n    }\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) {\n        return 'Invalid date';\n      }\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    } catch (error) {\n      console.error('Error formatting date:', error);\n      return 'Invalid date';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        sx: {\n          mb: 0\n        },\n        children: [project.name, \" Responses\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 22\n        }, this),\n        onClick: () => setRefreshKey(oldKey => oldKey + 1),\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Chip, {\n        label: project.status,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: [\"Created by \", project.creator_name, \" on \", formatDate(project.created_at)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        mb: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading responses...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this) : responses.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabChange,\n          \"aria-label\": \"responses tabs\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"By Participant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"By Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Tuned Responses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 0,\n        children: Object.values(groupedResponses.byParticipant).map((participantData, index) => {\n          var _participantData$part, _participantData$part2, _participantData$part3, _participantData$part4, _participantData$part5, _participantData$part6, _participantData$part7;\n          return /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 31\n              }, this),\n              \"aria-controls\": `participant-${((_participantData$part2 = participantData.participant) === null || _participantData$part2 === void 0 ? void 0 : _participantData$part2.id) || index}-content`,\n              id: `participant-${((_participantData$part3 = participantData.participant) === null || _participantData$part3 === void 0 ? void 0 : _participantData$part3.id) || index}-header`,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: ((_participantData$part4 = participantData.participant) === null || _participantData$part4 === void 0 ? void 0 : _participantData$part4.avatar_path) || `/static/avatars/default.png`,\n                  alt: ((_participantData$part5 = participantData.participant) === null || _participantData$part5 === void 0 ? void 0 : _participantData$part5.name) || 'Participant',\n                  sx: {\n                    mr: 2\n                  },\n                  children: (((_participantData$part6 = participantData.participant) === null || _participantData$part6 === void 0 ? void 0 : _participantData$part6.name) || 'P').charAt(0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: ((_participantData$part7 = participantData.participant) === null || _participantData$part7 === void 0 ? void 0 : _participantData$part7.name) || 'Unknown Participant'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    ml: 2,\n                    color: 'text.secondary'\n                  },\n                  children: [(participantData.responses || []).length, \" responses\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: (participantData.responses || []).map(response => /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    sx: {\n                      mb: 2,\n                      border: 1,\n                      borderColor: 'grey.200'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                      title: response.question,\n                      subheader: /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'center'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"text.secondary\",\n                          children: formatDate(response.created_at)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 268,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                          label: `Project ${projectId}`,\n                          size: \"small\",\n                          variant: \"outlined\",\n                          sx: {\n                            fontSize: '0.75rem'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 271,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                      children: [/*#__PURE__*/_jsxDEV(Paper, {\n                        elevation: 0,\n                        sx: {\n                          p: 2,\n                          bgcolor: 'background.default',\n                          borderRadius: 1\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"markdown-content\",\n                          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                            children: response.original_response\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 290,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 289,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 29\n                      }, this), response.chat_response_file_path && /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          mt: 2\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"outlined\",\n                          size: \"small\",\n                          children: \"View Full Chat Response\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 295,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 294,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this)\n                }, response.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, ((_participantData$part = participantData.participant) === null || _participantData$part === void 0 ? void 0 : _participantData$part.id) || `participant-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 1,\n        children: Object.entries(groupedResponses.byQuestion).map(([question, questionResponses]) => /*#__PURE__*/_jsxDEV(Accordion, {\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 31\n            }, this),\n            \"aria-controls\": `question-${question.replace(/\\s+/g, '-')}-content`,\n            id: `question-${question.replace(/\\s+/g, '-')}-header`,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [questionResponses.length, \" responses\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: questionResponses.map(response => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  sx: {\n                    mb: 2,\n                    border: 1,\n                    borderColor: 'grey.200'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                    avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                      src: response.participant.avatar_path,\n                      alt: response.participant.name,\n                      children: response.participant.name.charAt(0)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 31\n                    }, this),\n                    title: response.participant.name,\n                    subheader: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"text.secondary\",\n                        children: formatDate(response.created_at)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 347,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                        label: `Project ${projectId}`,\n                        size: \"small\",\n                        variant: \"outlined\",\n                        sx: {\n                          fontSize: '0.75rem'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 350,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Paper, {\n                      elevation: 0,\n                      sx: {\n                        p: 2,\n                        bgcolor: 'background.default',\n                        borderRadius: 1\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"markdown-content\",\n                        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                          children: response.original_response\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 369,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 368,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 29\n                    }, this), response.chat_response_file_path && /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mt: 2\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outlined\",\n                        size: \"small\",\n                        children: \"View Full Chat Response\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 374,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 25\n                }, this)\n              }, response.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)]\n        }, question, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [Object.values(groupedResponses.byParticipant).map(participantData => {\n            const tunedResponse = participantData.responses.find(r => r.refined_response);\n            const participant = participantData.participant;\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  mb: 2,\n                  border: 1,\n                  borderColor: 'grey.200',\n                  boxShadow: 3,\n                  borderRadius: 3,\n                  cursor: tunedResponse ? 'pointer' : 'default',\n                  transition: 'transform 0.2s',\n                  '&:hover': tunedResponse ? {\n                    transform: 'scale(1.03)',\n                    boxShadow: 6\n                  } : {},\n                  background: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)'\n                },\n                onClick: () => tunedResponse && handleOpenTunedModal(participant, tunedResponse),\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: participant.avatar_path || `/static/avatars/default.png`,\n                    alt: participant.name,\n                    sx: {\n                      width: 64,\n                      height: 64,\n                      fontSize: 32,\n                      border: '2px solid #90caf9',\n                      bgcolor: '#e3f2fd'\n                    },\n                    children: participant.name.charAt(0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 27\n                  }, this),\n                  title: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    sx: {\n                      fontWeight: 600\n                    },\n                    children: participant.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 32\n                  }, this),\n                  subheader: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    color: \"primary\",\n                    children: \"Tuned Speech\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 36\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    elevation: 0,\n                    sx: {\n                      p: 2,\n                      bgcolor: 'background.paper',\n                      borderRadius: 2,\n                      minHeight: 120\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"markdown-content\",\n                      style: {\n                        fontSize: '1.1rem',\n                        color: '#222'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                        children: tunedResponse ? tunedResponse.refined_response : '*No tuned response generated yet.*'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 440,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this)\n            }, participant.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Dialog, {\n            open: Boolean(tunedModal.open),\n            onClose: handleCloseTunedModal,\n            maxWidth: \"md\",\n            fullWidth: true,\n            PaperProps: {\n              sx: {\n                borderRadius: 4,\n                p: 4,\n                bgcolor: 'background.default',\n                boxShadow: 12\n              }\n            },\n            children: [tunedModal.participant && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                src: tunedModal.participant.avatar_path || `/static/avatars/default.png`,\n                alt: tunedModal.participant.name,\n                sx: {\n                  width: 180,\n                  height: 180,\n                  fontSize: 90,\n                  mb: 3,\n                  border: '6px solid #1976d2',\n                  bgcolor: '#e3f2fd',\n                  boxShadow: 8,\n                  transition: 'transform 0.2s',\n                  '&:hover': {\n                    transform: 'scale(1.05)'\n                  }\n                },\n                children: tunedModal.participant.name.charAt(0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                sx: {\n                  fontWeight: 700,\n                  mb: 1\n                },\n                children: tunedModal.participant.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                sx: {\n                  mb: 2\n                },\n                children: \"Tuned Speech\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0,\n              sx: {\n                p: 3,\n                bgcolor: 'background.paper',\n                borderRadius: 3\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"markdown-content tuned-markdown\",\n                style: {\n                  fontSize: '1.25rem',\n                  color: '#1a1a1a',\n                  lineHeight: 1.8,\n                  letterSpacing: '0.01em',\n                  maxWidth: 700,\n                  margin: '0 auto',\n                  padding: '8px 0'\n                },\n                children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                  rehypePlugins: [rehypeRaw] // Allow rendering HTML tags (like <span>) in markdown\n                  ,\n                  components: {\n                    p: ({\n                      node,\n                      ...props\n                    }) => /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        marginBottom: 24,\n                        marginTop: 0\n                      },\n                      children: props.children\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 52\n                    }, this)\n                  },\n                  children: tunedModal.tunedResponse ? (() => {\n                    const text = tunedModal.tunedResponse.refined_response || '';\n                    const firstParagraphMatch = text.match(/^(.*?)(\\n|$)/);\n                    if (!firstParagraphMatch) return text;\n                    const firstParagraph = firstParagraphMatch[1];\n                    const rest = text.slice(firstParagraph.length);\n                    if (!firstParagraph) return text;\n                    return `\n<span style=\"font-size:1.5rem;line-height:1;margin-right:2px;font-weight:bold;color:#1976d2;vertical-align:baseline;display:inline-block;\">${firstParagraph.charAt(0)}</span>${firstParagraph.slice(1)}${rest}\n`;\n                  })() : '*No tuned response generated yet.*'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              sx: {\n                mt: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleCloseTunedModal,\n                color: \"primary\",\n                variant: \"contained\",\n                sx: {\n                  minWidth: 120\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        textAlign: 'center',\n        py: 8,\n        px: 4,\n        bgcolor: 'grey.50'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [\"No responses collected yet for \", project.name || 'this project']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 3\n        },\n        children: \"Share the chat link with participants to start collecting retrospective responses.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        label: `Project ID: ${projectId}`,\n        variant: \"outlined\",\n        size: \"small\",\n        sx: {\n          opacity: 0.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(Responses, \"REIykHKbZErcwy2m9WXWMJHw2hE=\", false, function () {\n  return [useParams];\n});\n_c2 = Responses;\nexport default Responses;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"Responses\");","map":{"version":3,"names":["React","useState","useEffect","useParams","RefreshIcon","Typography","Box","Paper","Grid","Card","CardContent","CardHeader","Avatar","Tabs","Tab","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","ReactMarkdown","rehypeRaw","Button","Dialog","DialogTitle","DialogContent","DialogActions","Chip","Divider","getProjectResponses","getProject","jsxDEV","_jsxDEV","TabPanel","props","children","value","index","other","role","hidden","id","sx","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","Responses","_s","tunedModal","setTunedModal","open","participant","tunedResponse","handleOpenTunedModal","handleCloseTunedModal","projectId","responses","setResponses","loading","setLoading","tabValue","setTabValue","groupedResponses","setGroupedResponses","byParticipant","byQuestion","project","setProject","refreshKey","setRefreshKey","fetchProject","response","data","error","console","fetchResponses","Array","isArray","responsesWithFullContent","Promise","all","map","resp","chat_response_file_path","fileResponse","fetch","ok","markdownContent","text","original_response","statusText","processedResponses","pName","participant_name","participant_id","backendAvatarPath","participant_avatar_path","name","avatar_path","forEach","transformedResp","participantNameKey","push","questionKey","question","handleTabChange","event","newValue","formatDate","dateString","date","Date","isNaN","getTime","Intl","DateTimeFormat","year","month","day","hour","minute","format","flexGrow","display","justifyContent","alignItems","mb","variant","component","gutterBottom","startIcon","onClick","oldKey","label","status","color","creator_name","created_at","length","width","borderBottom","borderColor","onChange","Object","values","participantData","_participantData$part","_participantData$part2","_participantData$part3","_participantData$part4","_participantData$part5","_participantData$part6","_participantData$part7","expandIcon","src","alt","mr","charAt","ml","container","spacing","item","xs","border","title","subheader","size","fontSize","elevation","bgcolor","borderRadius","className","mt","entries","questionResponses","replace","md","avatar","find","r","refined_response","boxShadow","cursor","transition","transform","background","height","fontWeight","minHeight","style","Boolean","onClose","maxWidth","fullWidth","PaperProps","flexDirection","lineHeight","letterSpacing","margin","padding","rehypePlugins","components","node","marginBottom","marginTop","firstParagraphMatch","match","firstParagraph","rest","slice","minWidth","textAlign","py","px","opacity","_c2","$RefreshReg$"],"sources":["/Users/mirror/WindSurf Projects/retro_arif/retromeet/frontend/react-admin/src/pages/Responses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Avatar from '@mui/material/Avatar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeRaw from 'rehype-raw'; // For rendering HTML tags in markdown\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Chip from '@mui/material/Chip';\nimport Divider from '@mui/material/Divider';\nimport { getProjectResponses, getProject } from '../services/api';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`responses-tabpanel-${index}`}\n      aria-labelledby={`responses-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction Responses() {\n  // ...existing state\n  const [tunedModal, setTunedModal] = useState({ open: false, participant: null, tunedResponse: null });\n\n  // Handler to open modal with participant and tuned response\n  const handleOpenTunedModal = (participant, tunedResponse) => {\n    setTunedModal({ open: true, participant, tunedResponse });\n  };\n  // Handler to close modal\n  const handleCloseTunedModal = () => {\n    setTunedModal({ open: false, participant: null, tunedResponse: null });\n  };\n\n  const { projectId } = useParams();\n  const [responses, setResponses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [tabValue, setTabValue] = useState(0);\n  const [groupedResponses, setGroupedResponses] = useState({\n    byParticipant: {},\n    byQuestion: {}\n  });\n\n  const [project, setProject] = useState({});\n\n  const [refreshKey, setRefreshKey] = useState(0); // Add a key to trigger refresh\n\n  useEffect(() => {\n    const fetchProject = async () => {\n      try {\n        const response = await getProject(projectId);\n        setProject(response.data);\n      } catch (error) {\n        console.error('Error fetching project:', error);\n      }\n    };\n\n    fetchProject();\n  }, [projectId]);\n\n  const fetchResponses = async () => {\n      try {\n        setLoading(true);\n        const response = await getProjectResponses(projectId);\n        \n        if (response.data && Array.isArray(response.data)) {\n          const responsesWithFullContent = await Promise.all(\n            response.data.map(async (resp) => {\n              // If it's a chat response, fetch the full content and overwrite original_response\n              if (resp.chat_response_file_path) {\n                try {\n                  const fileResponse = await fetch(`http://localhost:8000/static/${resp.chat_response_file_path}`);\n                  if (fileResponse.ok) {\n                    const markdownContent = await fileResponse.text();\n                    // Return the response with original_response updated, but keep other fields like refined_response\n                    return { ...resp, original_response: markdownContent }; \n                  } else {\n                     // If fetch fails, just return the original response data\n                     console.error(`Error fetching chat content for ${resp.chat_response_file_path}: ${fileResponse.statusText}`);\n                     return resp;\n                  }\n                } catch (error) {\n                  console.error(`Error fetching chat content for ${resp.chat_response_file_path}`, error);\n                  return resp; // On error, return original response\n                }\n              }\n              // If it's not a chat response, just return it as is.\n              return resp;\n            })\n          );\n\n          const processedResponses = responsesWithFullContent.map(resp => {\n            const pName = resp.participant_name || `Participant ${resp.participant_id || 'Unknown'}`;\n            // Use the avatar_path from the backend response if available (e.g., resp.participant_avatar_path)\n            // or a default if not present.\n            const backendAvatarPath = resp.participant_avatar_path; // Adjust field name if necessary\n            return {\n              ...resp,\n              participant: {\n                id: resp.participant_id,\n                name: pName,\n                avatar_path: backendAvatarPath || `/static/avatars/default.png` // Use backend path or default\n              }\n            };\n          });\n          \n          setResponses(processedResponses);\n\n          const byParticipant = {};\n          const byQuestion = {};\n\n          processedResponses.forEach(transformedResp => {\n            const participantNameKey = transformedResp.participant.name;\n            if (!byParticipant[participantNameKey]) {\n              byParticipant[participantNameKey] = {\n                participant: transformedResp.participant,\n                responses: []\n              };\n            }\n            byParticipant[participantNameKey].responses.push(transformedResp);\n\n            const questionKey = transformedResp.question || \"General Feedback\";\n            if (!byQuestion[questionKey]) {\n              byQuestion[questionKey] = [];\n            }\n            byQuestion[questionKey].push(transformedResp);\n          });\n          \n          setGroupedResponses({ byParticipant, byQuestion });\n        } else {\n          setResponses([]);\n          setGroupedResponses({ byParticipant: {}, byQuestion: {} });\n        }\n      } catch (error) {\n        console.error('Error fetching responses:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n  useEffect(() => {\n    fetchResponses();\n  }, [projectId, refreshKey]); // Add refreshKey to trigger refetch\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n\n\n  const formatDate = (dateString) => {\n    if (!dateString) {\n      return 'No date';\n    }\n    \n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) {\n        return 'Invalid date';\n      }\n      \n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    } catch (error) {\n      console.error('Error formatting date:', error);\n      return 'Invalid date';\n    }\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ mb: 0 }}>\n          {project.name} Responses\n        </Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<RefreshIcon />}\n          onClick={() => setRefreshKey(oldKey => oldKey + 1)}\n        >\n          Refresh\n        </Button>\n      </Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 4 }}>\n        <Chip label={project.status} color=\"primary\" />\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Created by {project.creator_name} on {formatDate(project.created_at)}\n        </Typography>\n      </Box>\n      <Divider sx={{ mb: 4 }} />\n\n      {loading ? (\n        <Typography>Loading responses...</Typography>\n      ) : responses.length > 0 ? (\n        <Box sx={{ width: '100%' }}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"responses tabs\">\n              <Tab label=\"By Participant\" />\n              <Tab label=\"By Question\" />\n              <Tab label=\"Tuned Responses\" />\n            </Tabs>\n          </Box>\n          \n          {/* By Participant View */}\n          <TabPanel value={tabValue} index={0}>\n            {Object.values(groupedResponses.byParticipant).map((participantData, index) => (\n              <Accordion key={participantData.participant?.id || `participant-${index}`}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls={`participant-${participantData.participant?.id || index}-content`}\n                  id={`participant-${participantData.participant?.id || index}-header`}\n                >\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                    <Avatar \n                      src={participantData.participant?.avatar_path || `/static/avatars/default.png`}\n                      alt={participantData.participant?.name || 'Participant'}\n                      sx={{ mr: 2 }}\n                    >\n                      {(participantData.participant?.name || 'P').charAt(0)}\n                    </Avatar>\n                    <Typography variant=\"h6\">{participantData.participant?.name || 'Unknown Participant'}</Typography>\n                    <Typography variant=\"body2\" sx={{ ml: 2, color: 'text.secondary' }}>\n                      {(participantData.responses || []).length} responses\n                    </Typography>\n                  </Box>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Grid container spacing={3}>\n                    {(participantData.responses || []).map((response) => (\n                      <Grid item xs={12} key={response.id}>\n                        <Card sx={{ mb: 2, border: 1, borderColor: 'grey.200' }}>\n                          <CardHeader\n                            title={response.question}\n                            subheader={\n                              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                <Typography variant=\"body2\" color=\"text.secondary\">\n                                  {formatDate(response.created_at)}\n                                </Typography>\n                                <Chip \n                                  label={`Project ${projectId}`} \n                                  size=\"small\" \n                                  variant=\"outlined\"\n                                  sx={{ fontSize: '0.75rem' }}\n                                />\n                              </Box>\n                            }\n                          />\n                          <CardContent>\n                            <Paper \n                              elevation={0} \n                              sx={{ \n                                p: 2, \n                                bgcolor: 'background.default',\n                                borderRadius: 1\n                              }}\n                            >\n                              <div className=\"markdown-content\">\n                                <ReactMarkdown>{response.original_response}</ReactMarkdown>\n                              </div>\n                            </Paper>\n                            {response.chat_response_file_path && (\n                              <Box sx={{ mt: 2 }}>\n                                <Button\n                                  variant=\"outlined\"\n                                  size=\"small\"\n\n                                >\n                                  View Full Chat Response\n                                </Button>\n                              </Box>\n                            )}\n                          </CardContent>\n                        </Card>\n                      </Grid>\n                    ))}\n                  </Grid>\n                </AccordionDetails>\n              </Accordion>\n            ))}\n          </TabPanel>\n          \n          {/* By Question View */}\n          <TabPanel value={tabValue} index={1}>\n            {Object.entries(groupedResponses.byQuestion).map(([question, questionResponses]) => (\n              <Accordion key={question}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls={`question-${question.replace(/\\s+/g, '-')}-content`}\n                  id={`question-${question.replace(/\\s+/g, '-')}-header`}\n                >\n                  <Box>\n                    <Typography variant=\"h6\">{question}</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {questionResponses.length} responses\n                    </Typography>\n                  </Box>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Grid container spacing={3}>\n                    {questionResponses.map((response) => (\n                      <Grid item xs={12} md={6} key={response.id}>\n                        <Card sx={{ mb: 2, border: 1, borderColor: 'grey.200' }}>\n                          <CardHeader\n                            avatar={\n                              <Avatar \n                                src={response.participant.avatar_path}\n                                alt={response.participant.name}\n                              >\n                                {response.participant.name.charAt(0)}\n                              </Avatar>\n                            }\n                            title={response.participant.name}\n                            subheader={\n                              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                <Typography variant=\"body2\" color=\"text.secondary\">\n                                  {formatDate(response.created_at)}\n                                </Typography>\n                                <Chip \n                                  label={`Project ${projectId}`} \n                                  size=\"small\" \n                                  variant=\"outlined\"\n                                  sx={{ fontSize: '0.75rem' }}\n                                />\n                              </Box>\n                            }\n                          />\n                          <CardContent>\n                            <Paper \n                              elevation={0} \n                              sx={{ \n                                p: 2, \n                                bgcolor: 'background.default',\n                                borderRadius: 1\n                              }}\n                            >\n                              <div className=\"markdown-content\">\n                                <ReactMarkdown>{response.original_response}</ReactMarkdown>\n                              </div>\n                            </Paper>\n                            {response.chat_response_file_path && (\n                              <Box sx={{ mt: 2 }}>\n                                <Button\n                                  variant=\"outlined\"\n                                  size=\"small\"\n\n                                >\n                                  View Full Chat Response\n                                </Button>\n                              </Box>\n                            )}\n                          </CardContent>\n                        </Card>\n                      </Grid>\n                    ))}\n                  </Grid>\n                </AccordionDetails>\n              </Accordion>\n            ))}\n          </TabPanel>\n          \n          {/* Tuned Responses View */}\n          <TabPanel value={tabValue} index={2}>\n            <Grid container spacing={3}>\n              {Object.values(groupedResponses.byParticipant).map((participantData) => {\n                const tunedResponse = participantData.responses.find(r => r.refined_response);\n                const participant = participantData.participant;\n\n                return (\n                  <Grid item xs={12} md={6} key={participant.id}>\n                    <Card\n                      sx={{\n                        mb: 2,\n                        border: 1,\n                        borderColor: 'grey.200',\n                        boxShadow: 3,\n                        borderRadius: 3,\n                        cursor: tunedResponse ? 'pointer' : 'default',\n                        transition: 'transform 0.2s',\n                        '&:hover': tunedResponse ? { transform: 'scale(1.03)', boxShadow: 6 } : {},\n                        background: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',\n                      }}\n                      onClick={() => tunedResponse && handleOpenTunedModal(participant, tunedResponse)}\n                    >\n                      <CardHeader\n                        avatar={\n                          <Avatar\n                            src={participant.avatar_path || `/static/avatars/default.png`}\n                            alt={participant.name}\n                            sx={{ width: 64, height: 64, fontSize: 32, border: '2px solid #90caf9', bgcolor: '#e3f2fd' }}\n                          >\n                            {participant.name.charAt(0)}\n                          </Avatar>\n                        }\n                        title={<Typography variant=\"h6\" sx={{ fontWeight: 600 }}>{participant.name}</Typography>}\n                        subheader={<Typography variant=\"subtitle2\" color=\"primary\">Tuned Speech</Typography>}\n                      />\n                      <CardContent>\n                        <Paper\n                          elevation={0}\n                          sx={{\n                            p: 2,\n                            bgcolor: 'background.paper',\n                            borderRadius: 2,\n                            minHeight: 120,\n                          }}\n                        >\n                          <div className=\"markdown-content\" style={{ fontSize: '1.1rem', color: '#222' }}>\n                            <ReactMarkdown>\n                              {tunedResponse ? tunedResponse.refined_response : '*No tuned response generated yet.*'}\n                            </ReactMarkdown>\n                          </div>\n                        </Paper>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                );\n              })}\n\n              {/* Tuned Response Modal */}\n              <Dialog\n                open={Boolean(tunedModal.open)}\n                onClose={handleCloseTunedModal}\n                maxWidth=\"md\"\n                fullWidth\n                PaperProps={{\n                  sx: {\n                    borderRadius: 4,\n                    p: 4,\n                    bgcolor: 'background.default',\n                    boxShadow: 12,\n                  }\n                }}\n              >\n                {tunedModal.participant && (\n                  <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mb: 3 }}>\n                    <Avatar\n                      src={tunedModal.participant.avatar_path || `/static/avatars/default.png`}\n                      alt={tunedModal.participant.name}\n                      sx={{\n                        width: 180,\n                        height: 180,\n                        fontSize: 90,\n                        mb: 3,\n                        border: '6px solid #1976d2',\n                        bgcolor: '#e3f2fd',\n                        boxShadow: 8,\n                        transition: 'transform 0.2s',\n                        '&:hover': { transform: 'scale(1.05)' },\n                      }}\n                    >\n                      {tunedModal.participant.name.charAt(0)}\n                    </Avatar>\n                    <Typography variant=\"h5\" sx={{ fontWeight: 700, mb: 1 }}>{tunedModal.participant.name}</Typography>\n                    <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 2 }}>Tuned Speech</Typography>\n                  </Box>\n                )}\n                <Paper elevation={0} sx={{ p: 3, bgcolor: 'background.paper', borderRadius: 3 }}>\n                  <div\n                    className=\"markdown-content tuned-markdown\"\n                    style={{\n                      fontSize: '1.25rem',\n                      color: '#1a1a1a',\n                      lineHeight: 1.8,\n                      letterSpacing: '0.01em',\n                      maxWidth: 700,\n                      margin: '0 auto',\n                      padding: '8px 0',\n                    }}\n                  >\n                    <ReactMarkdown\n                      rehypePlugins={[rehypeRaw]} // Allow rendering HTML tags (like <span>) in markdown\n                      components={{\n                        p: ({ node, ...props }) => <p style={{ marginBottom: 24, marginTop: 0 }}>{props.children}</p>,\n                      }}\n                    >\n                      {tunedModal.tunedResponse ?\n                        (() => {\n                          const text = tunedModal.tunedResponse.refined_response || '';\n                          const firstParagraphMatch = text.match(/^(.*?)(\\n|$)/);\n                          if (!firstParagraphMatch) return text;\n                          const firstParagraph = firstParagraphMatch[1];\n                          const rest = text.slice(firstParagraph.length);\n                          if (!firstParagraph) return text;\n                          return `\n<span style=\"font-size:1.5rem;line-height:1;margin-right:2px;font-weight:bold;color:#1976d2;vertical-align:baseline;display:inline-block;\">${firstParagraph.charAt(0)}</span>${firstParagraph.slice(1)}${rest}\n`;\n                        })()\n                        : '*No tuned response generated yet.*'}\n                    </ReactMarkdown>\n                  </div>\n                </Paper>\n                <DialogActions sx={{ mt: 2 }}>\n                  <Button onClick={handleCloseTunedModal} color=\"primary\" variant=\"contained\" sx={{ minWidth: 120 }}>\n                    Close\n                  </Button>\n                </DialogActions>\n              </Dialog>\n\n            </Grid>\n          </TabPanel>\n        </Box>\n      ) : (\n        <Paper sx={{ textAlign: 'center', py: 8, px: 4, bgcolor: 'grey.50' }}>\n          <Typography variant=\"h6\" gutterBottom>\n            No responses collected yet for {project.name || 'this project'}\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n            Share the chat link with participants to start collecting retrospective responses.\n          </Typography>\n          <Chip \n            label={`Project ID: ${projectId}`} \n            variant=\"outlined\" \n            size=\"small\"\n            sx={{ opacity: 0.7 }}\n          />\n        </Paper>\n      )}\n    </Box>\n  );\n}\n\nexport default Responses;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}