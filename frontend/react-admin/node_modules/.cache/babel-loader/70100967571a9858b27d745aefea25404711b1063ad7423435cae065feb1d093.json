{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Projects API\nexport const getProjects = () => api.get('/projects/');\nexport const getProject = id => api.get(`/projects/${id}/`);\nexport const createProject = project => api.post('/projects/', project);\nexport const updateProject = (id, project) => api.put(`/projects/${id}/`, project);\nexport const deleteProject = id => api.delete(`/projects/${id}/`);\n\n// Project Participants API (many-to-many relationship)\nexport const getProjectParticipants = projectId => api.get(`/projects/${projectId}/participants/`);\nexport const addParticipantToProject = (projectId, participantId) => api.post(`/projects/${projectId}/participants/`, {\n  participant_id: participantId\n});\nexport const removeParticipantFromProject = (projectId, participantId) => api.delete(`/projects/${projectId}/participants/${participantId}/`);\n\n// Global Participants API\nexport const getAllParticipants = () => api.get('/participants/');\nexport const getParticipant = participantId => api.get(`/participants/${participantId}/`);\nexport const createParticipant = participantData => api.post('/participants/', participantData);\n// participantData should be an object like { name: \"John Doe\", avatar_filename: \"optional_avatar.jpg\" }\nexport const updateParticipant = (participantId, participant) => api.put(`/participants/${participantId}/`, participant);\nexport const deleteParticipant = participantId => api.delete(`/participants/${participantId}/`);\nexport const uploadAvatar = formData => api.post('/participants/avatars/', formData, {\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n});\nexport const assignAvatar = (participantId, filename) => api.put(`/participants/${participantId}/avatar/`, {\n  filename\n});\n\n// Responses API\nexport const getProjectResponses = projectId => api.get(`/responses/project/${projectId}/`);\nexport const getResponse = responseId => api.get(`/responses/${responseId}/`);\nexport const createResponse = responseData => api.post('/responses/', responseData);\nexport const createChatResponse = chatResponseData => api.post('/responses/chat', chatResponseData);\n\n// Chat Link API (from chat router)\nexport const generateChatLink = (projectId, participants) => api.post('/chat/generate-link', {\n  project_id: parseInt(projectId),\n  participants\n});\nexport const getChatLink = projectId => api.get(`/chat/status?projectId=${projectId}`);\n\n// Summary API (project-based)\nexport const generateSummary = projectId => api.post(`/projects/${projectId}/summary/`);\nexport const getSummary = projectId => api.get(`/projects/${projectId}/summary/`);\nexport const updateSummary = (projectId, summaryData) => api.put(`/projects/${projectId}/summary/`, summaryData);\n\n// Topics\nexport const generateTopics = projectId => api.post(`/projects/${projectId}/topics`);\nexport const getResponsesForTopic = (projectId, topic) => api.post(`/projects/${projectId}/topic_responses`, {\n  topic\n});\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","getProjects","get","getProject","id","createProject","project","post","updateProject","put","deleteProject","delete","getProjectParticipants","projectId","addParticipantToProject","participantId","participant_id","removeParticipantFromProject","getAllParticipants","getParticipant","createParticipant","participantData","updateParticipant","participant","deleteParticipant","uploadAvatar","formData","assignAvatar","filename","getProjectResponses","getResponse","responseId","createResponse","responseData","createChatResponse","chatResponseData","generateChatLink","participants","project_id","parseInt","getChatLink","generateSummary","getSummary","updateSummary","summaryData","generateTopics","getResponsesForTopic","topic"],"sources":["/Users/mirror/WindSurf Projects/retro_arif/retromeet/frontend/react-admin/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Projects API\nexport const getProjects = () => api.get('/projects/');\nexport const getProject = (id) => api.get(`/projects/${id}/`);\nexport const createProject = (project) => api.post('/projects/', project);\nexport const updateProject = (id, project) => api.put(`/projects/${id}/`, project);\nexport const deleteProject = (id) => api.delete(`/projects/${id}/`);\n\n// Project Participants API (many-to-many relationship)\nexport const getProjectParticipants = (projectId) => api.get(`/projects/${projectId}/participants/`);\nexport const addParticipantToProject = (projectId, participantId) => api.post(`/projects/${projectId}/participants/`, { participant_id: participantId });\nexport const removeParticipantFromProject = (projectId, participantId) => api.delete(`/projects/${projectId}/participants/${participantId}/`);\n\n// Global Participants API\nexport const getAllParticipants = () => api.get('/participants/');\nexport const getParticipant = (participantId) => api.get(`/participants/${participantId}/`);\nexport const createParticipant = (participantData) => api.post('/participants/', participantData);\n// participantData should be an object like { name: \"John Doe\", avatar_filename: \"optional_avatar.jpg\" }\nexport const updateParticipant = (participantId, participant) => api.put(`/participants/${participantId}/`, participant);\nexport const deleteParticipant = (participantId) => api.delete(`/participants/${participantId}/`);\nexport const uploadAvatar = (formData) => api.post('/participants/avatars/', formData, {\n  headers: {\n    'Content-Type': 'multipart/form-data',\n  },\n});\nexport const assignAvatar = (participantId, filename) => api.put(`/participants/${participantId}/avatar/`, { filename });\n\n// Responses API\nexport const getProjectResponses = (projectId) => api.get(`/responses/project/${projectId}/`);\nexport const getResponse = (responseId) => api.get(`/responses/${responseId}/`);\nexport const createResponse = (responseData) => api.post('/responses/', responseData);\nexport const createChatResponse = (chatResponseData) => api.post('/responses/chat', chatResponseData);\n\n// Chat Link API (from chat router)\nexport const generateChatLink = (projectId, participants) => api.post('/chat/generate-link', { \n  project_id: parseInt(projectId), \n  participants \n});\nexport const getChatLink = (projectId) => api.get(`/chat/status?projectId=${projectId}`);\n\n// Summary API (project-based)\nexport const generateSummary = (projectId) => api.post(`/projects/${projectId}/summary/`);\nexport const getSummary = (projectId) => api.get(`/projects/${projectId}/summary/`);\nexport const updateSummary = (projectId, summaryData) => api.put(`/projects/${projectId}/summary/`, summaryData);\n\n// Topics\nexport const generateTopics = (projectId) => api.post(`/projects/${projectId}/topics`);\nexport const getResponsesForTopic = (projectId, topic) => api.post(`/projects/${projectId}/topic_responses`, { topic });\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}